{
  "uid" : "af5611415193369a",
  "name" : "test_add_group[None:nameSj;header;footer ltR5]",
  "fullName" : "test.test_add_group#test_add_group",
  "historyId" : "beabdb0e5bfe3a2f0dd7662973bd2c4d",
  "time" : {
    "start" : 1613632600538,
    "stop" : 1613632600538,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "mysql.connector.errors.InterfaceError: 2003: Can't connect to MySQL server on 'localhost:3306' (10061 No connection could be made because the target machine actively refused it)",
  "statusTrace" : "self = <mysql.connector.network.MySQLTCPSocket object at 0x0482C670>\n\n    def open_connection(self):\n        \"\"\"Open the TCP/IP connection to the MySQL server\n        \"\"\"\n        # Get address information\n        addrinfo = [None] * 5\n        try:\n            addrinfos = socket.getaddrinfo(self.server_host,\n                                           self.server_port,\n                                           0, socket.SOCK_STREAM,\n                                           socket.SOL_TCP)\n            # If multiple results we favor IPv4, unless IPv6 was forced.\n            for info in addrinfos:\n                if self.force_ipv6 and info[0] == socket.AF_INET6:\n                    addrinfo = info\n                    break\n                elif info[0] == socket.AF_INET:\n                    addrinfo = info\n                    break\n            if self.force_ipv6 and addrinfo[0] is None:\n                raise errors.InterfaceError(\n                    \"No IPv6 address found for {0}\".format(self.server_host))\n            if addrinfo[0] is None:\n                addrinfo = addrinfos[0]\n        except IOError as err:\n            raise errors.InterfaceError(\n                errno=2003, values=(self.get_address(), _strioerror(err)))\n        else:\n            (self._family, socktype, proto, _, sockaddr) = addrinfo\n    \n        # Instanciate the socket and connect\n        try:\n            self.sock = socket.socket(self._family, socktype, proto)\n            self.sock.settimeout(self._connection_timeout)\n>           self.sock.connect(sockaddr)\nE           ConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it\n\nenv\\lib\\site-packages\\mysql\\connector\\network.py:607: ConnectionRefusedError\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <SubRequest 'db' for <Function test_add_group[None:;;]>>\n\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def db(request):\n        db_config = load_config(request.config.getoption(\"--target\"))['db']\n>       dbfixture = DbFixture(host=db_config['host'], name=db_config['name'], user=db_config['user'], password=db_config['password'])\n\nconftest.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixture\\db.py:14: in __init__\n    self.connection = mysql.connector.connect(host=host, database=name, user=user, password=password)\nenv\\lib\\site-packages\\mysql\\connector\\__init__.py:278: in connect\n    return MySQLConnection(*args, **kwargs)\nenv\\lib\\site-packages\\mysql\\connector\\connection.py:108: in __init__\n    self.connect(**kwargs)\nenv\\lib\\site-packages\\mysql\\connector\\abstracts.py:1003: in connect\n    self._open_connection()\nenv\\lib\\site-packages\\mysql\\connector\\connection.py:351: in _open_connection\n    self._socket.open_connection()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mysql.connector.network.MySQLTCPSocket object at 0x0482C670>\n\n    def open_connection(self):\n        \"\"\"Open the TCP/IP connection to the MySQL server\n        \"\"\"\n        # Get address information\n        addrinfo = [None] * 5\n        try:\n            addrinfos = socket.getaddrinfo(self.server_host,\n                                           self.server_port,\n                                           0, socket.SOCK_STREAM,\n                                           socket.SOL_TCP)\n            # If multiple results we favor IPv4, unless IPv6 was forced.\n            for info in addrinfos:\n                if self.force_ipv6 and info[0] == socket.AF_INET6:\n                    addrinfo = info\n                    break\n                elif info[0] == socket.AF_INET:\n                    addrinfo = info\n                    break\n            if self.force_ipv6 and addrinfo[0] is None:\n                raise errors.InterfaceError(\n                    \"No IPv6 address found for {0}\".format(self.server_host))\n            if addrinfo[0] is None:\n                addrinfo = addrinfos[0]\n        except IOError as err:\n            raise errors.InterfaceError(\n                errno=2003, values=(self.get_address(), _strioerror(err)))\n        else:\n            (self._family, socktype, proto, _, sockaddr) = addrinfo\n    \n        # Instanciate the socket and connect\n        try:\n            self.sock = socket.socket(self._family, socktype, proto)\n            self.sock.settimeout(self._connection_timeout)\n            self.sock.connect(sockaddr)\n        except IOError as err:\n            raise errors.InterfaceError(\n>               errno=2003, values=(self.get_address(), _strioerror(err)))\nE           mysql.connector.errors.InterfaceError: 2003: Can't connect to MySQL server on 'localhost:3306' (10061 No connection could be made because the target machine actively refused it)\n\nenv\\lib\\site-packages\\mysql\\connector\\network.py:610: InterfaceError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1613632599259,
      "stop" : 1613632600286,
      "duration" : 1027
    },
    "status" : "broken",
    "statusMessage" : "mysql.connector.errors.InterfaceError: 2003: Can't connect to MySQL server on 'localhost:3306' (10061 No connection could be made because the target machine actively refused it)\n",
    "statusTrace" : "  File \"c:\\users\\vkarpenko\\pycharmprojects\\python_training\\env\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\users\\vkarpenko\\pycharmprojects\\python_training\\env\\lib\\site-packages\\_pytest\\fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"c:\\users\\vkarpenko\\pycharmprojects\\python_training\\env\\lib\\site-packages\\_pytest\\fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"C:\\Users\\vkarpenko\\PycharmProjects\\python_training\\conftest.py\", line 42, in db\n    dbfixture = DbFixture(host=db_config['host'], name=db_config['name'], user=db_config['user'], password=db_config['password'])\n  File \"C:\\Users\\vkarpenko\\PycharmProjects\\python_training\\fixture\\db.py\", line 14, in __init__\n    self.connection = mysql.connector.connect(host=host, database=name, user=user, password=password)\n  File \"c:\\users\\vkarpenko\\pycharmprojects\\python_training\\env\\lib\\site-packages\\mysql\\connector\\__init__.py\", line 278, in connect\n    return MySQLConnection(*args, **kwargs)\n  File \"c:\\users\\vkarpenko\\pycharmprojects\\python_training\\env\\lib\\site-packages\\mysql\\connector\\connection.py\", line 108, in __init__\n    self.connect(**kwargs)\n  File \"c:\\users\\vkarpenko\\pycharmprojects\\python_training\\env\\lib\\site-packages\\mysql\\connector\\abstracts.py\", line 1003, in connect\n    self._open_connection()\n  File \"c:\\users\\vkarpenko\\pycharmprojects\\python_training\\env\\lib\\site-packages\\mysql\\connector\\connection.py\", line 351, in _open_connection\n    self._socket.open_connection()\n  File \"c:\\users\\vkarpenko\\pycharmprojects\\python_training\\env\\lib\\site-packages\\mysql\\connector\\network.py\", line 610, in open_connection\n    errno=2003, values=(self.get_address(), _strioerror(err)))\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "hasContent" : true,
    "stepsCount" : 0
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "host",
    "value" : "NTB-BOZAR"
  }, {
    "name" : "thread",
    "value" : "11300-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:nameSj;header;footer ltR5"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "af5611415193369a.json",
  "parameterValues" : [ "None:nameSj;header;footer ltR5" ]
}